import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//Common ms

	implementation project(':Common-ms')

//  Core
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

//  Starter
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.5.0'

//  Microservices
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

//  Database
	runtimeOnly 'org.postgresql:postgresql'

//  Swagger / OpenAPI
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.30'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

//  DTO Mapping
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

//  Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

//  Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//Jakatra Validation
	implementation 'jakarta.validation:jakarta.validation-api:3.1.1'

	//Security
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
//    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.register("prepareKotlinBuildScriptModel") {}


tasks.named('test') {
	useJUnitPlatform()
}
