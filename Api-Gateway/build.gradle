import org.codehaus.groovy.runtime.GStringImpl

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}


dependencies {
// Spring Boot MVC starter
//	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Cloud Gateway
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

	// Eureka Client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// Circuit Breaker
	implementation "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j"

	// Tracing (Micrometer + Zipkin)
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

	// YAML parser
	implementation 'org.yaml:snakeyaml:2.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Jakatra Validation
	implementation 'jakarta.validation:jakarta.validation-api:3.1.1'

	// Testl…ôr
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.register("prepareKotlinBuildScriptModel") {}

tasks.named('test') {
	useJUnitPlatform()
}
